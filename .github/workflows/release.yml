name: Release to NuGet

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  VERSION: 0.1.${{ github.run_number }}

permissions:
  id-token: write

jobs:
  release:
    name: Release to NuGet
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Set version from release tag
        if: github.event_name == 'release'
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          # Extract major.minor from tag and append GitHub run number as build
          MAJOR_MINOR=$(echo $VERSION | cut -d. -f1-2)
          PACKAGE_VERSION="${MAJOR_MINOR}.${{ github.run_number }}"
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "Release version: $PACKAGE_VERSION (from tag: $VERSION)"

      - name: Set version from environment variable
        if: github.event_name == 'workflow_dispatch'
        run: |
          # Use the VERSION environment variable
          PACKAGE_VERSION="${{ env.VERSION }}"
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "Manual release version: $PACKAGE_VERSION"

      - name: Update project version
        run: |
          sed -i "s/<Version>.*<\/Version>/<Version>${{ env.PACKAGE_VERSION }}<\/Version>/" src/EnergiDataService.Client/EnergiDataService.Client.csproj
          cat src/EnergiDataService.Client/EnergiDataService.Client.csproj

      - name: Restore dependencies
        run: dotnet restore src/EnergiDataService.Client.sln

      - name: Build solution
        run: dotnet build src/EnergiDataService.Client.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test src/EnergiDataService.Client.sln --configuration Release --no-build --verbosity normal

      - name: Create NuGet package
        run: dotnet pack src/EnergiDataService.Client/EnergiDataService.Client.csproj --configuration Release --no-build --output ./artifacts

      - name: NuGet login (OIDC â†’ temp API key)
        uses: NuGet/login@v1
        id: login
        with:
          user: christian.helle

      - name: Publish to NuGet.org
        run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{steps.login.outputs.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Upload NuGet package artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package-release
          path: ./artifacts/*.nupkg

